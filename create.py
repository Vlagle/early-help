import discord
import asyncio
import sys
from datetime import datetime
from discord.utils import get
from config import *
from database import *
from bot import *
from options import *


class TicketCreation(discord.ui.View):

  @discord.ui.button(label="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É (–≤–æ–ø—Ä–æ—Å) / Submit an application (question)",
                     emoji="üì©",
                     style=discord.ButtonStyle.blurple)
  async def presscreate(self, interaction: discord.Interaction,
                        button: discord.ui.button):
    author = interaction.user
    guild = interaction.guild
    
    embed2 = discord.Embed(
          description=
          f'\n–ü—Ä–∏–≤–µ—Ç, {author.name}! –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –∏–ª–∏ –ø—É–Ω–∫—Ç —Å –≤–æ–ø—Ä–æ—Å–æ–º –∫ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É. \n \n Hi {author.name}! Select the regiment you want to apply to or the point with a question to the management.\n',
          color=embedColor)
    embed2.set_author(name=f'{author}', icon_url=f'{author.display_avatar}')
      #embed2.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
    await interaction.response.send_message(embed=embed2,
                                              view=TicketCreationMenuUI(),
                                              ephemeral=True)



class TicketCreationMenu(discord.ui.Select):

  def __init__(self):

    def optionsList():
      listofOptions = list(OptionsDict.values())
      oList = []
      for presets in listofOptions:
        oList.append(
            discord.SelectOption(label=presets[0],
                                 value=presets[1],
                                 description=presets[2]))
      return oList

    super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç / Choose  an item...",
                     options=optionsList(),
                     min_values=1,
                     max_values=1)

  async def callback(self, interaction: discord.Interaction):
    author = interaction.user
    x[interaction.user.display_name] = f"{self.values[0]}"
    await interaction.response.send_modal(TicketCreationModal())
    embed2 = discord.Embed(description=f'–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑! / You can only select an option once!',
                           color=embedColor)
    embed2.set_author(name=f'{author}', icon_url=f'{author.display_avatar}')
    #embed2.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
    await interaction.edit_original_response(embed=embed2, view=None)


class TicketCreationMenuUI(discord.ui.View):

  def __init__(self):
    super().__init__()
    self.add_item(TicketCreationMenu())


class embedButtons(discord.ui.View):

  @discord.ui.button(label="–ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É / Close Ticket",
                     emoji="üìù",
                     style=discord.ButtonStyle.red)
  async def closeTicket(self, interaction: discord.Interaction,
                        button: discord.Button):
    tchannel = interaction.channel
    author = interaction.user
    guild = interaction.guild
    connection = TicketData.connect()
    cursor = TicketData.cursor(connection)
    ticketInfo = TicketData.find(cursor, tchannel.id)
    TicketData.close(connection)
    ltype = (ticketInfo[4])
    allowedAccess = False
    try:
      for allowedRoles in list(channelPerms[f"{ltype}"]):
        prole = discord.utils.get(guild.roles, id=allowedRoles)
        if prole in author.roles:
          allowedAccess = True
        else:
          pass
    except TypeError:
      prole = get(guild.roles, id=channelPerms[f"{ltype}"])
      if prole in author.roles:
        allowedAccess = True
      else:
        pass
    if (allowedAccess == True) or (f"{ticketInfo[1]}" == f"{author.id}"):
      embed6 = discord.Embed(
          description=
          "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç –±–∏–ª–µ—Ç? –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞. \n\n Are you sure that you want to close this ticket? This will result in the ticket being deleted.",
          color=embedColor)
      embed6.set_author(name=f'{author}', icon_url=author.display_avatar)
      #embed6.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
      try:
        await interaction.response.send_message(
            embed=embed6, view=yesOrNoOption(timeout=None), ephemeral=True)
      except discord.HTTPException:
        await interaction.response.send_message(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. / Something weird happened here, try again.")
    else:
      embed5 = discord.Embed(
          description=f'''–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∑–∞—è–≤–∫–∏ –º–æ–∂–µ—Ç –∑–∞–∫—Ä—ã—Ç—å –µ–µ! Only the author of the ticket can use this button!''',
          color=embedColor)
      embed5.set_author(name=f'{author}', icon_url=f'{author.display_avatar}')
      #embed5.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
      try:
        await interaction.response.send_message(embed=embed5, ephemeral=True)
      except discord.HTTPException:
        await interaction.response.send_message(
            f'''**–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É! You can't use that command!****''')

  @discord.ui.button(label="–û–ø—Ü–∏–∏ / Options",
                     emoji="‚öôÔ∏è",
                     style=discord.ButtonStyle.green)
  async def ticketOptions(self, interaction: discord.Interaction,
                          button: discord.Button):
    try:
      guild = interaction.guild
      author = interaction.user
      roleList = [994215060052381706, 994226835795746867, 1178285446158094386, 1213575945991102504, 1230216013195513928, 1230216099228942489, 1262847259754631320]
      permissionGranted = False
      for roleids in channelPerms.values():
        roleList.append(roleids)
      for allowedRoles in roleList:
        arole = get(guild.roles, id=allowedRoles)
        if arole in author.roles:
          permissionGranted = True
        else:
          pass
      tchannel = interaction.channel
      if permissionGranted == True:
        connection = TicketData.connect()
        cursor = TicketData.cursor(connection)
        ticketInfo = TicketData.find(cursor, tchannel.id)
        TicketData.close(connection)
        if ticketInfo != None:
          acategory = discord.utils.get(guild.categories,
                                        id=archivedTicketsCategoryID)
          acategoryc = (50 - (len(acategory.channels)))
          if acategoryc == 0:
            acategoryc2 = str(f'{acategoryc} slots left (full)')
          elif acategoryc == 1:
            acategoryc2 = str(f'{acategoryc} slot left (almost full)')
          elif acategoryc <= 5:
            acategoryc2 = str(f'{acategoryc} slots left (almost full)')
          elif acategoryc >= 6:
            acategoryc2 = str(f'{acategoryc} slots left')
          text = str(
              f'''üë•- –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞/Add a member to the ticket\n\nüëã- –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞/Remove a member from the ticket\n\nüìì- –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª –∑–∞—è–≤–∫–∏/Rename a ticket channel\n\nüìù- –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É/Save and delete a ticket                         '''
          )
          embed3 = discord.Embed(title='''**–û–ø—Ü–∏–∏ –∑–∞—è–≤–∫–∏ / Ticket Options**''',
                                 description=f'{text}',
                                 color=embedColor)
          try:
            lauthor2 = (ticketInfo[1])
            lauthor3 = (int(lauthor2))
            lauthor4 = get(guild.members, id=lauthor3)
            if lauthor4 == None:
              lauthor5 = await bot.fetch_user(lauthor3)
              if lauthor5 == None:
                lauthor = str("N/A")
              else:
                lauthor = lauthor5
            else:
              lauthor = lauthor4
          except IndexError:
            lauthor = str("N/A")
          try:
            ltype = (ticketInfo[4])
          except IndexError:
            ltype = str("N/A")
          try:
            lcreation = (ticketInfo[3])
          except IndexError:
            lcreation = str("N/A")
          try:
            lstatus = (ticketInfo[5])
          except IndexError:
            lstatus = str("N/A")
          if (ticketInfo[2]) != "No":
            lcstatus = (ticketInfo[2])
            lcstatus2 = int(lcstatus)
            claimer = await bot.fetch_user(lcstatus2)
            cstatus = str(f"**Claimed** ({claimer.mention})")
          else:
            cstatus = str(f'**Not Claimed**')
          if lauthor == 'N/A':
            text2 = str(
                f'''**__–ê–≤—Ç–æ—Ä/Author:__** {lauthor.mention}\n**__–ü–æ–ª–∫/Squadron:__** {ltype}\n**__–°—Ç–∞—Ç—É—Å/Status:__** {lstatus}\n**__–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—èCreation time:__** {lcreation}\n**__–°—Ç–∞—Ç—É—Å/Claim Status:__** {cstatus}'''
            )
          else:
            text2 = str(
                f'''**__–ê–≤—Ç–æ—Ä/Author:__** {lauthor.mention}\n**__–ü–æ–ª–∫/Squadron:__** {ltype}\n**__–°—Ç–∞—Ç—É—Å/Status:__** {lstatus}\n**__–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—èCreation time:__** {lcreation}\n**__–°—Ç–∞—Ç—É—Å/Claim Status:__** {cstatus}'''
            )
          embed3.add_field(name="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ / Ticket Infomation:", value=f"{text2}")
          embed3.set_author(name=f'{author}', icon_url=author.display_avatar)
          #embed3.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
          try:
            await interaction.response.send_message(embed=embed3,
                                                    ephemeral=True,
                                                    view=optionsMenu())
          except discord.HTTPException:
            await interaction.response.send_message(
                "HTTP Error that I'm too lazy to type out. Try again.",
                ephemeral=True)
        else:
          embed5 = discord.Embed(
              description=
              f'''–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫!/You can only use this command in a ticket channel!''',
              color=embedColor)
          embed5.set_author(name=f'{author}',
                            icon_url=f'{author.display_avatar}')
          #embed5.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
          try:
            await interaction.response.send_message(embed=embed5,
                                                    ephemeral=True)
          except discord.HTTPException:
            await interaction.response.send_message(
                f'''**–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫!/You can only use this command in a ticket channel!****'''
            )
      else:
        embed5 = discord.Embed(description=f'''–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É/You can't use that command!''',
                               color=embedColor)
        embed5.set_author(name=f'{author}',
                          icon_url=f'{author.display_avatar}')
        #embed5.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
        try:
          await interaction.response.send_message(embed=embed5, ephemeral=True)
        except discord.HTTPException:
          await interaction.response.send_message(
              f'''**–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É/You can't use that command!****''')
    except Exception as e:
      message2 = await interaction.response.send_message(
          f'A unknown error has occurred, a copy of the error has been sent to the developer ‚ùå',
          ephemeral=True)
      activity1 = discord.Activity(type=discord.ActivityType.playing,
                                   name=f'{botStatusMessage}')
      await bot.change_presence(status=discord.Status.dnd, activity=activity1)
      web = bot.get_user(debugLogSendID)
      text = str('''Error on line {}'''.format(sys.exc_info()[-1].tb_lineno))
      embed = discord.Embed(title='commands.options function fail',
                            description=f'{text}, {str(e)}',
                            color=embedColor)
      try:
        await web.send(embed=embed)
      except discord.HTTPException:
        await web.send("commands.options function fail" + str(e))
      print(str(e))


class TicketCreationModal(discord.ui.Modal, title=f"–ó–∞—è–≤–∫–∞ –≤ –ø–æ–ª–∫ (–≤–æ–ø—Ä–æ—Å) /Application (qestion)"):
  answer = discord.ui.TextInput(
      label='–í–∞—à –Ω–∏–∫–Ω–µ–π–º / Your nickname...',
      style=discord.TextStyle.paragraph,
      required=True,
      max_length=128)

  async def on_submit(self, interaction: discord.Interaction):
    ticketType = (x.get(interaction.user.display_name))
    author = interaction.user
    ticketDescription = (self.children[0].value)
    guild = bot.get_guild(guildID)
    me = bot.get_user(bot.user.id)
    default_perms = {}
    default_perms[guild.default_role] = discord.PermissionOverwrite(
        read_messages=False)
    default_perms[me] = discord.PermissionOverwrite(read_messages=True,
                                                    send_messages=True)
    default_perms[author] = discord.PermissionOverwrite(read_messages=True,
                                                        send_messages=True)
    try:
      for allowedRoles in list(channelPerms[f"{ticketType}"]):
        prole = get(guild.roles, id=allowedRoles)
        default_perms[prole] = discord.PermissionOverwrite(read_messages=True,
                                                           send_messages=True)
    except TypeError:
      prole = get(guild.roles, id=channelPerms[f"{ticketType}"])
      default_perms[prole] = discord.PermissionOverwrite(read_messages=True,
                                                         send_messages=True)
    now = datetime.now().strftime("%m-%d-%Y, %H:%M:%S")
    category = discord.utils.get(guild.categories, id=activeTicketsCategoryID)
    tchannel = await guild.create_text_channel(
        name=f'{ticketType}-{author.display_name}',
        category=category,
        overwrites=default_perms,
        topic=f"Nickname: {ticketDescription} | Created by: {author}")
    embed3 = discord.Embed(
        description=
        f'–í–∞—à–∞ {ticketType} –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, {tchannel.mention}. –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∏ –æ—Ñ–∏—Ü–µ—Ä—ã —Å–∫–æ—Ä–æ —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –µ—ë. / Your {ticketType} ticket has been created, {tchannel.mention}. A member of our team will be with you shortly.',
        color=embedColor)
    embed3.set_author(name=f'{author}', icon_url=f'{author.display_avatar}')
    #embed3.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=f'{bot.user.display_avatar}')
    try:
      await interaction.response.send_message(embed=embed3, ephemeral=True)
    except discord.HTTPException:
      await interaction.response.send_message(
          f'–í–∞—à–∞ {ticketType} –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, {tchannel.mention}. –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∏ –æ—Ñ–∏—Ü–µ—Ä—ã —Å–∫–æ—Ä–æ —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –µ—ë. / Your {ticketType} ticket has been created, {tchannel.mention}. A member of our team will be with you shortly.',
          ephemeral=True)
    messageString = ""
    try:
      for rolesToPing in list(channelPerms[f"{ticketType}"]):
        prole = get(guild.roles, id=rolesToPing)
        messageString = messageString + (f" {prole.mention}")
      await tchannel.send(messageString)
    except TypeError:
      prole = get(guild.roles, id=channelPerms[ticketType])
      await tchannel.send(f'{prole.mention}')
    embed1 = discord.Embed(
        title='[–í–Ω—É—Ç—Ä–∏—Å–µ—Ä–≤–µ—Ä–Ω–∞—è] –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ / Ticket Created',
        description=f'{author.mention} —Å–æ–∑–¥–∞–ª –Ω–æ–≤—É—é {ticketType} –∑–∞—è–≤–∫—É –≤ –ø–æ–ª–∫ / {author.mention} has created a new {ticketType} ticket',
        color=embedColor)
    embed1.add_field(name=f'–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º:', value=f'{ticketDescription}')
    try:
      embed1.set_thumbnail(url=f'{author.display_avatar}')
    except Exception:
      pass
    #embed1.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=bot.user.display_avatar)
    try:
      message2 = await tchannel.send(embed=embed1,
                                     view=embedButtons(timeout=None))
    except discord.HTTPException as y:
      message2 = await tchannel.send(
          f"–ó–∞—è–≤–∫–∞ –æ—Ç {author}, –ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º: {ticketDescription} / Ticket Created by {author}, Reason: {ticketDescription}",
          view=embedButtons(timeout=None))
    await message2.pin()
    connection = TicketData.connect()
    cursor = TicketData.cursor(connection)
    TicketData.add(connection, cursor, tchannel.id, author.id, f"{now} UTC",
                   ticketType, "Active", message2.id)
    TicketData.close(connection)
    embed2 = discord.Embed(
        title='[–í–Ω—É—Ç—Ä–∏—Å–µ—Ä–≤–µ—Ä–Ω–∞—è] –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ / Ticket Created',
        description=f'{author.mention} —Å–æ–∑–¥–∞–ª –Ω–æ–≤—É—é {ticketType} –∑–∞—è–≤–∫—É –≤ –ø–æ–ª–∫ / {author.mention} has created a new {ticketType} ticket',
        
        color=embedColor)
    embed2.add_field(name='–ö–∞–Ω–∞–ª/Channel:',
                     value=f'{tchannel.mention}',
                     inline=False)
    embed2.add_field(name=f'–ù–∏–∫–Ω–µ–π–º –≤ –∏–≥—Ä–µ/Nickname:',
                     value=f'{ticketDescription}',
                     inline=False)
    embed2.add_field(name='–ü–æ–ª–∫/Squadron:', value=f'{ticketType}', inline=False)
    embed2.add_field(name="**__ID –∞–≤—Ç–æ—Ä–∞:__**", value=f"{author.id}", inline=True)
    #embed2.set_footer(text=f"{footerOfEmbeds} | {bot.user.id}", icon_url=bot.user.display_avatar)
    syslogc = await bot.fetch_channel(ticketLogsChannelID)
    try:
      message3 = await syslogc.send(embed=embed2)
    except discord.HTTPException:
      message3 = await syslogc.send(
          f"–ó–∞—è–≤–∫–∞ –æ—Ç {author}, –ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º: {ticketDescription} / Ticket Created by {author}, Reason: {ticketDescription}")
    del x[interaction.user.display_name]

    
    if channelPerms[ticketType] == (994215060052381706, 994226835795746867 ):   #–î–ª—è EARLY
      
      
      await tchannel.send(f'{author.mention}, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É / Fill out the ticket: \n\nüëá–ü–†–ò–ú–ï–† –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø –ó–ê–Ø–í–ö–òüëá \n (—á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ—á–∫–µ –Ω–∞–∂–º–∏—Ç–µ Shift + Enter) \n 1) –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª–∫–∞ –≤ –∫–æ—Ç–æ—Ä—ã–π –≤—Å—Ç—É–ø–∞–µ—Ç–µ (—Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä): \n EARLY - –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ø–æ–ª–∫–æ–≤—ã—Ö –±–æ–µ–≤ \n 2) –ù–∏–∫–Ω–µ–π–º –≤ –∏–≥—Ä–µ, –ò–º—è, –≤–æ–∑—Ä–∞—Å—Ç, —É—Ä–æ–≤–µ–Ω—å –∞–∫–∫–∞—É–Ω—Ç–∞, –∫–æ–ª-–≤–æ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –±–æ–µ–≤ –≤ –†–ë, –ö–î –≤ –†–ë –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü \n 3) –ö–∞–∫ –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –ø–æ–ª–∫–æ–≤—ã–º –±–æ—è–º? –ì–æ—Ç–æ–≤ –ª–∏ —á–∞—Å—Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ –Ω–∏—Ö —É—á–∞—Å—Ç–∏–µ (–ü–ë - –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å –ø–æ–ª–∫–∞ early, —Ñ–∞—Ä–º –ø–æ–ª–∫ –ø–± –ø–æ –∂–µ–ª–∞–Ω–∏—é) \n  4) –ü–æ–ª–∫–∏ –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–æ—è–ª–∏ —Ä–∞–Ω–µ–µ \n 5) –û—Ç–∫—É–¥–∞ —Ç—ã (–≥–æ—Ä–æ–¥ –∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å), –ø—Ä–∏–º–µ—Ä–Ω—ã–π –ø—Ä–∞–π–º —Ç–∞–π–º \n 6) –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∏–≥—Ä—ã: –ê–ë, –†–ë –∏–ª–∏ –°–ë \n 7) –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π –≤–∏–¥ —Ç–µ—Ö–Ω–∏–∫–∏ –≤ –ü–ë (–Ω–∞–∑–µ–º–Ω—ã–π, –≤–æ–∑–¥—É—à–Ω—ã–π) \n 8) –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±—Ä –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ: –∞–≤–∏–∞, —Ç–∞–Ω–∫–∏ (–Ω–µ –ø—Ä–µ–º—ã) \n 9) –ö–∞–∫ –æ –Ω–∞—Å —É–∑–Ω–∞–ª –∏–ª–∏ –≥–¥–µ –Ω–∞—à–µ–ª? \n ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî \n üëáEXAMPLE OF COMPLETING AN APPLICATIONüëá \n 1) Name of the squadron you are joining (make a choice):  \n EARLY - for daily squadron battles \n 2) Nickname in the game, name, age, account level, number of battles played in RB, K/D in RB over the past month \n 3) How do you feel about squadron battles? Are you ready to take part in them often (SQB is the main goal of the squadron) \n 4) The squadrons in which you were previously a member \n 5) Where are you from (city and time zone), approximate prime time \n 6) Preferred game mode: AB, RB or SB \n 7) Preferred type of equipment in the SQB (ground, air) \n 8) Max BR: aviation, tanks (not premium) \n 9) How did you hear about us or where did you find us?    ')
    
    if channelPerms[ticketType] == (994215060052381706, 1178285446158094386, 1213575945991102504):   #–î–ª—è E4RLY
      await tchannel.send(f'{author.mention}, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É: \n\nüëá–ü–†–ò–ú–ï–† –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø –ó–ê–Ø–í–ö–òüëá \n (—á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ—á–∫–µ –Ω–∞–∂–º–∏—Ç–µ Shift + Enter) \n 1) –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª–∫–∞ –≤ –∫–æ—Ç–æ—Ä—ã–π –≤—Å—Ç—É–ø–∞–µ—Ç–µ (—Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä): \n ‚¨•E4RLY - –¥–ª—è —Ñ–∞—Ä–º–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã \n 2) –ù–∏–∫–Ω–µ–π–º –≤ –∏–≥—Ä–µ, –ò–º—è, –≤–æ–∑—Ä–∞—Å—Ç, —É—Ä–æ–≤–µ–Ω—å –∞–∫–∫–∞—É–Ω—Ç–∞, –∫–æ–ª-–≤–æ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –±–æ–µ–≤ –≤ –†–ë, –ö–î –≤ –†–ë –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü \n 3) –ö–∞–∫ –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –ø–æ–ª–∫–æ–≤—ã–º –±–æ—è–º? –ì–æ—Ç–æ–≤ –ª–∏ —á–∞—Å—Ç–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ –Ω–∏—Ö —É—á–∞—Å—Ç–∏–µ (–ü–ë - –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å –ø–æ–ª–∫–∞ early, —Ñ–∞—Ä–º –ø–æ–ª–∫ –ø–± –ø–æ –∂–µ–ª–∞–Ω–∏—é) \n  4) –ü–æ–ª–∫–∏ –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–æ—è–ª–∏ —Ä–∞–Ω–µ–µ \n 5) –û—Ç–∫—É–¥–∞ —Ç—ã (–≥–æ—Ä–æ–¥ –∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å), –ø—Ä–∏–º–µ—Ä–Ω—ã–π –ø—Ä–∞–π–º —Ç–∞–π–º \n 6) –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∏–≥—Ä—ã: –ê–ë, –†–ë –∏–ª–∏ –°–ë \n 7) –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π –≤–∏–¥ —Ç–µ—Ö–Ω–∏–∫–∏ –≤ –ü–ë (–Ω–∞–∑–µ–º–Ω—ã–π, –≤–æ–∑–¥—É—à–Ω—ã–π) \n 8) –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±—Ä –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ: –∞–≤–∏–∞, —Ç–∞–Ω–∫–∏ (–Ω–µ –ø—Ä–µ–º—ã) \n 9) –ö–∞–∫ –æ –Ω–∞—Å —É–∑–Ω–∞–ª –∏–ª–∏ –≥–¥–µ –Ω–∞—à–µ–ª?')
    if channelPerms[ticketType] == (994215060052381706, 1230216013195513928, 1230216099228942489):   #–î–ª—è ENRLY

       await tchannel.send(f'{author.mention}, Fill out the ticket: \n\nüëáEXAMPLE OF COMPLETING AN APPLICATIONüëá \n 1) Name of the squadron you are joining (make a choice):  \n ‚òÖ ENRLY - for farm equipment, co-op play and squadron battles \n 2) Nickname in the game, name, age, account level, number of battles played in RB, K/D in RB over the past month \n 3) How do you feel about squadron battles? Are you ready to take part in them often (SQB is the main goal of the squadron) \n 4) The squadrons in which you were previously a member \n 5) Where are you from (city and time zone), approximate prime time \n 6) Preferred game mode: AB, RB or SB \n 7) Preferred type of equipment in the SQB (ground, air) \n 8) Max BR: aviation, tanks (not premium) \n 9) How did you hear about us or where did you find us? ')

    if channelPerms[ticketType] == (994215060052381706, 1213575945991102504, 1230216099228942489):   #–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
        
      await tchannel.send(f'{author.mention}, –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ. / Ask your question in this channel.')
    
    if channelPerms[ticketType] == (994215060052381706):   #–î–ª—è –æ—Ç—Ä—è–¥–∞
        
      await tchannel.send(f'{author.mention}, –¥–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–≤–æ–π –æ—Ç—Ä—è–¥. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å <@&1262847259754631320>')


x = dict()
